create table academy (id integer not null auto_increment, train boolean not null, version integer not null, primary key (id)) ENGINE=InnoDB;
create table academy_queue_entry (id integer not null auto_increment, position integer not null, remaining integer not null, scheduled boolean not null, training integer not null, trainingtype integer not null, academy_id integer not null, primary key (id)) ENGINE=InnoDB;
create table ally (id integer not null auto_increment, allytag varchar(255) not null, description longtext not null, destroyedShips integer not null, founded datetime not null, hp longtext not null, items longtext not null, lostBattles smallint not null, lostShips integer not null, name longtext not null, plainname varchar(255) not null, pname varchar(255) not null, showGtuBieter tinyint not null, showastis boolean not null, showlrs tinyint not null, tick integer not null, version integer not null, wonBattles smallint not null, president integer not null, primary key (id), unique (president)) ENGINE=InnoDB;
create table ally_posten (id integer not null auto_increment, name varchar(255) not null, version integer not null, ally integer not null, primary key (id)) ENGINE=InnoDB;
create table ally_rangdescriptors (id integer not null auto_increment, customImg varchar(255), name varchar(255) not null, rang integer not null, version integer not null, ally_id integer not null, primary key (id)) ENGINE=InnoDB;
create table ammo (id integer not null auto_increment, areadamage integer not null, damage integer not null, destroyable double precision not null, flags integer not null, itemid integer not null, name varchar(255) not null, shielddamage integer not null, shotspershot integer not null, smalltrefferws integer not null, subdamage integer not null, subws integer not null, torptrefferws integer not null, trefferws integer not null, type varchar(255) not null, primary key (id)) ENGINE=InnoDB;
create table base_types (id integer not null auto_increment, cargo integer not null, energy integer not null, height integer not null, maxtiles integer not null, name varchar(255) not null, size integer not null, spawnableress longtext, terrain longtext, width integer not null, primary key (id)) ENGINE=InnoDB;
create table bases (id integer not null auto_increment, active longtext not null, arbeiter integer not null, autogtuacts longtext not null, bebauung longtext not null, bewohner integer not null, cargo longtext not null, coreactive integer not null, e integer not null, height integer not null, isfeeding boolean not null, isloading boolean not null, maxcargo bigint not null, maxe integer not null, maxtiles integer not null, name varchar(255) not null, size integer not null, spawnableress longtext, spawnressavailable longtext, system integer not null, terrain longtext not null, version integer not null, width integer not null, x integer not null, y integer not null, academy_id integer, core_id integer, forschungszentrum_id integer, klasse integer not null, owner integer not null, werft_id integer, primary key (id)) ENGINE=InnoDB;
create table battles (id integer not null auto_increment, ally1 integer not null, ally2 integer not null, blockcount integer not null, com1BETAK boolean not null, com2BETAK boolean not null, flags integer not null, lastaction bigint not null, lastturn bigint not null, onend longtext, ready1 boolean not null, ready2 boolean not null, system integer not null, takeCommand1 integer not null, takeCommand2 integer not null, version integer not null, visibility longtext, x integer not null, y integer not null, commander1 integer not null, commander2 integer not null, primary key (id)) ENGINE=InnoDB;
create table battles_ships (shipid integer not null, ablativeArmor integer not null, action integer not null, comm integer not null, destroyer integer not null, engine integer not null, hull integer not null, sensors integer not null, shields integer not null, side integer not null, version integer not null, weapons integer not null, battleid integer not null, primary key (shipid)) ENGINE=InnoDB;
create table building_alternativebilder (Building_id integer not null, alternativeBilder varchar(255), alternativeBilder_KEY integer, primary key (Building_id, alternativeBilder_KEY)) ENGINE=InnoDB;
create table buildings (module varchar(255) not null, id integer not null auto_increment, arbeiter integer not null, bewohner integer not null, buildcosts varchar(255) not null, category integer not null, chanceress varchar(255), consumes varchar(255) not null, deakable boolean not null, eprodu integer not null, ever integer not null, eps integer not null, name varchar(255) not null, perowner integer not null, perplanet integer not null, picture varchar(255) not null, produces varchar(255) not null, race integer not null, shutdown boolean not null, terrain longtext, ucomplex boolean not null, techReq_id integer, primary key (id)) ENGINE=InnoDB;
create table cargo_entries_units (type integer not null, id bigint not null auto_increment, amount bigint not null, unittype integer not null, basis_id integer, schiff_id integer, primary key (id), unique (type, basis_id, schiff_id, unittype)) ENGINE=InnoDB;
create table config (name varchar(255) not null, value longtext not null, version integer not null, primary key (name)) ENGINE=InnoDB;
create table config_felsbrocken (id integer not null auto_increment, cargo varchar(255) not null, chance integer not null, shiptype integer not null, system_id bigint not null, primary key (id)) ENGINE=InnoDB;
create table config_felsbrocken_systems (id bigint not null auto_increment, count integer not null, name varchar(255), system_id integer not null, primary key (id)) ENGINE=InnoDB;
create table cores (id integer not null auto_increment, arbeiter integer not null, bewohner integer not null, buildcosts varchar(255) not null, consumes varchar(255) not null, eprodu integer not null, ever integer not null, eps integer not null, name varchar(255) not null, produces varchar(255) not null, shutdown boolean not null, astitype integer not null, techReq_id integer, primary key (id)) ENGINE=InnoDB;
create table dynamic_content (id varchar(255) not null, aenderungsdatum datetime, anlagedatum datetime, autor varchar(255), lizenz varchar(255), lizenzdetails longtext, quelle varchar(255), version integer not null, hochgeladenDurch_id integer, primary key (id)) ENGINE=InnoDB;
create table factions_angebote (id integer not null auto_increment, description longtext not null, image varchar(255) not null, title varchar(255) not null, version integer not null, faction integer not null, primary key (id)) ENGINE=InnoDB;
create table factions_shop_entries (id integer not null auto_increment, availability integer not null, lpKosten bigint not null, min_rank integer not null, price bigint not null, resource varchar(255) not null, type integer not null, version integer not null, faction_id integer not null, primary key (id)) ENGINE=InnoDB;
create table factions_shop_orders (id integer not null auto_increment, adddata longtext, count integer not null, date bigint not null, lpKosten bigint not null, price bigint not null, status integer not null, version integer not null, shopentry_id integer not null, user_id integer not null, primary key (id)) ENGINE=InnoDB;
create table factory (id integer not null auto_increment, buildingid integer not null, count integer not null, produces longtext not null, version integer not null, col integer, primary key (id), unique (col, buildingid)) ENGINE=InnoDB;
create table forschungen (id integer not null auto_increment, costs varchar(255) not null, description longtext not null, flags varchar(255) not null, image varchar(255), name varchar(255) not null, race integer not null, specializationCosts integer not null, time integer not null, visibility integer not null, req1_id integer, req2_id integer, req3_id integer, primary key (id)) ENGINE=InnoDB;
create table fraktion_aktions_meldung (id bigint not null auto_increment, bearbeitetAm datetime, gemeldetAm datetime, meldungstext longtext, version integer not null, fraktion_id integer, gemeldetVon_id integer, primary key (id)) ENGINE=InnoDB;
create table fraktions_gui_eintrag (id bigint not null auto_increment, text longtext, version integer not null, user_id integer not null, primary key (id), unique (user_id)) ENGINE=InnoDB;
create table fraktions_gui_eintrag_seiten (FraktionsGuiEintrag_id bigint not null, seiten varchar(255)) ENGINE=InnoDB;
create table fz (id integer not null auto_increment, dauer integer not null, type integer not null, version integer not null, forschung integer, primary key (id)) ENGINE=InnoDB;
create table global_sectortemplates (id varchar(255) not null, h integer not null, scriptid integer not null, w integer not null, x integer not null, y integer not null, primary key (id)) ENGINE=InnoDB;
create table gtu_warenkurse (place varchar(255) not null, kurse longtext not null, name varchar(255) not null, version integer not null, primary key (place)) ENGINE=InnoDB;
create table gtu_zwischenlager (id integer not null auto_increment, cargo1 longtext not null, cargo1need longtext not null, cargo2 longtext not null, cargo2need longtext not null, version integer not null, posten integer not null, user1 integer not null, user2 integer not null, primary key (id)) ENGINE=InnoDB;
create table gui_help (page varchar(255) not null, text longtext, primary key (page)) ENGINE=InnoDB;
create table handel (id integer not null auto_increment, bietet longtext not null, comm longtext not null, sucht longtext not null, time bigint not null, version integer not null, who integer not null, primary key (id)) ENGINE=InnoDB;
create table inttutorial (id integer not null auto_increment, headimg varchar(255) not null, reqBase boolean not null, reqName boolean not null, reqShip boolean not null, text longtext not null, benoetigteSeite_id integer, primary key (id)) ENGINE=InnoDB;
create table items (id integer not null, accesslevel integer not null, cargo bigint not null, description longtext, effect longtext, handel boolean not null, isspawnable boolean not null, largepicture longtext, name varchar(255) not null, picture longtext, quality varchar(255), unknownItem boolean not null, primary key (id)) ENGINE=InnoDB;
create table items_build (id integer not null auto_increment, buildcosts varchar(255) not null, buildingid varchar(255) not null, dauer decimal(19,5) not null, name varchar(255) not null, produce varchar(255) not null, res1_id integer, res2_id integer, res3_id integer, primary key (id)) ENGINE=InnoDB;
create table jumpnodes (id integer not null auto_increment, gcpcolonistblock boolean not null, hidden integer not null, name varchar(255) not null, system integer not null, systemout integer not null, wpnblock boolean not null, x integer not null, xout integer not null, y integer not null, yout integer not null, primary key (id)) ENGINE=InnoDB;
create table jumps (id integer not null auto_increment, system integer not null, version integer not null, x integer not null, y integer not null, shipid integer not null, primary key (id), unique (shipid)) ENGINE=InnoDB;
create table kaserne (id integer not null auto_increment, col integer not null, primary key (id)) ENGINE=InnoDB;
create table kaserne_queues (id integer not null auto_increment, count integer not null, remaining integer not null, kaserne integer not null, unitid integer not null, primary key (id)) ENGINE=InnoDB;
create table logging (id bigint not null auto_increment, data longtext, source varchar(255) not null, target varchar(255) not null, time bigint not null, type varchar(255) not null, user_id integer not null, version integer not null, primary key (id)) ENGINE=InnoDB;
create table loyalitaetspunkte (id integer not null auto_increment, anmerkungen longtext, anzahlPunkte integer not null, grund varchar(255) not null, zeitpunkt datetime not null, user_id integer not null, verliehenDurch_id integer not null, primary key (id)) ENGINE=InnoDB;
create table nebel (system integer not null, x integer not null, y integer not null, type integer not null, primary key (system, x, y)) ENGINE=InnoDB;
create table offiziere (id integer not null auto_increment, com integer not null, comu integer not null, ing integer not null, ingu integer not null, name varchar(255) not null, nav integer not null, navu integer not null, rang integer not null, sec integer not null, secu integer not null, spec integer not null, training boolean not null, waf integer not null, wafu integer not null, userid integer not null, stationiertAufBasis_id integer, stationiertAufSchiff_id integer, primary key (id)) ENGINE=InnoDB;
create table orders (ordertype varchar(31) not null, id integer not null auto_increment, tick integer not null, user integer not null, version integer not null, type integer, flags varchar(255), primary key (id)) ENGINE=InnoDB;
create table orders_offiziere (id integer not null auto_increment, com integer not null, cost integer not null, ing integer not null, name varchar(255) not null, nav integer not null, rang integer not null, sec integer not null, waf integer not null, primary key (id)) ENGINE=InnoDB;
create table orders_ships (id integer not null auto_increment, cost integer not null, rasse integer not null, type integer not null, primary key (id)) ENGINE=InnoDB;
create table ordner (id integer not null auto_increment, flags integer not null, name varchar(255) not null, parent integer not null, version integer not null, playerid integer not null, primary key (id)) ENGINE=InnoDB;
create table permission (id integer not null auto_increment, action varchar(255) not null, category varchar(255) not null, user_id integer not null, primary key (id)) ENGINE=InnoDB;
create table portal_news (id integer not null auto_increment, author longtext not null, date bigint not null, txt longtext not null, shortDescription longtext not null, title varchar(255) not null, primary key (id)) ENGINE=InnoDB;
create table quests (id integer not null auto_increment, name varchar(255) not null, qid varchar(255) not null, primary key (id)) ENGINE=InnoDB;
create table quests_answers (id integer not null auto_increment, text longtext not null, primary key (id)) ENGINE=InnoDB;
create table quests_completed (id integer not null auto_increment, questid integer not null, userid integer not null, primary key (id)) ENGINE=InnoDB;
create table quests_quick (id integer not null auto_increment, awarditems longtext not null, awardre bigint not null, dependsOnQuests varchar(255) not null, description longtext not null, enabled integer not null, finishtext longtext not null, head varchar(255) not null, loottable longtext, moreThanOnce integer not null, notyettext longtext not null, qid varchar(255) not null, qname varchar(255) not null, reqitems longtext not null, reqre bigint not null, shortdesc longtext not null, source varchar(255) not null, sourcetype varchar(255) not null, startitems longtext not null, target varchar(255) not null, targettype varchar(255) not null, primary key (id)) ENGINE=InnoDB;
create table quests_running (id integer not null auto_increment, execdata longblob not null, ontick integer, publish integer not null, statustext varchar(255) not null, uninstall longtext, questid integer not null, userid integer not null, primary key (id)) ENGINE=InnoDB;
create table quests_text (id integer not null auto_increment, comment varchar(255) not null, picture varchar(255) not null, text longtext not null, primary key (id)) ENGINE=InnoDB;
create table rang (id integer not null, image varchar(255), name varchar(255), primary key (id)) ENGINE=InnoDB;
create table rasse (id integer not null auto_increment, description longtext, name varchar(255), personenNamenGenerator varchar(255), playable boolean not null, playableext boolean not null, schiffsKlassenNamenGenerator varchar(255), schiffsNamenGenerator varchar(255), head_id integer, memberIn_id integer, primary key (id)) ENGINE=InnoDB;
create table schiff_einstellungen (id integer not null auto_increment, autodeut tinyint not null, automine tinyint not null, bookmark boolean not null, destcom longtext not null, destsystem integer not null, destx integer not null, desty integer not null, isallyfeeding boolean not null, isfeeding boolean not null, showtradepost integer not null, startFighters boolean not null, gotoSecondrow boolean not null, version integer not null, primary key (id)) ENGINE=InnoDB;
create table scripts (id integer not null auto_increment, name varchar(255) not null, script longtext not null, primary key (id)) ENGINE=InnoDB;
create table sectors (system integer not null, x integer not null, y integer not null, objects integer not null, onenter longtext not null, version integer not null, primary key (system, x, y)) ENGINE=InnoDB;
create table sessions (id integer not null auto_increment, tick bigint not null, token varchar(255) not null, version integer not null, userId integer not null, primary key (id)) ENGINE=InnoDB;
create table ship_flags (id integer not null auto_increment, flagType integer not null, remaining integer not null, version integer not null, ship integer not null, primary key (id)) ENGINE=InnoDB;
create table ship_fleets (id integer not null auto_increment, name varchar(255) not null, version integer not null, primary key (id)) ENGINE=InnoDB;
create table ship_history (id integer not null, history longtext, primary key (id)) ENGINE=InnoDB;
create table ship_loot (id integer not null auto_increment, chance integer not null, count integer not null, resource varchar(255) not null, shiptype integer not null, totalmax integer not null, version integer not null, owner integer not null, targetuser integer not null, primary key (id)) ENGINE=InnoDB;
create table ship_script_data (shipid integer not null auto_increment, script longtext, scriptexedata longblob, primary key (shipid)) ENGINE=InnoDB;
create table ship_types (id integer not null auto_increment, adocks integer not null, ablativeArmor integer not null, bounty decimal(19,2) not null, cargo bigint not null, chance4Loot integer not null, cost integer not null, crew integer not null, descrip longtext not null, deutfactor integer not null, eps integer not null, flags longtext not null, groupwrap integer not null, heat integer not null, hide boolean not null, hull integer not null, hydro integer not null, jdocks integer not null, lostInEmpChance double precision not null, maxheat longtext not null, maxunitsize integer not null, minCrew integer not null, modules longtext not null, nahrungcargo bigint not null, nickname varchar(255) not null, panzerung integer not null, pickingCost integer not null, picture varchar(255) not null, ra integer not null, rd integer not null, recost integer not null, rm integer not null, ru integer not null, scanCost integer not null, sensorrange integer not null, shields integer not null, class integer not null, size integer not null, srs boolean not null, torpedodef integer not null, unitspace integer not null, version integer not null, versorger boolean not null, weapons longtext not null, werft integer not null, ow_werft integer, primary key (id)) ENGINE=InnoDB;
create table ships (id integer not null, ablativeArmor integer not null, alarm integer not null, battleAction boolean not null, cargo longtext not null, comm integer not null, crew integer not null, docked varchar(255) not null, e integer not null, engine integer not null, s integer not null, hull integer not null, jumptarget varchar(255) not null, nahrungcargo bigint not null, name varchar(255) not null, oncommunicate longtext, sensors integer not null, shields integer not null, status varchar(255) not null, system integer not null, version integer not null, heat longtext not null, weapons integer not null, x integer not null, y integer not null, battle integer, einstellungen_id integer, fleet integer, modules integer, owner integer not null, scriptData_id integer, type integer not null, primary key (id)) ENGINE=InnoDB;
create table ships_baubar (id integer not null auto_increment, costs longtext not null, crew integer not null, dauer integer not null, ekosten integer not null, flagschiff boolean not null, race integer not null, werftslots integer not null, res1_id integer, res2_id integer, res3_id integer, type integer not null, primary key (id)) ENGINE=InnoDB;
create table ships_lost (id integer not null auto_increment, ally integer not null, battle integer not null, battlelog varchar(255), destally integer not null, destowner integer not null, name varchar(255), owner integer not null, tick integer not null, type integer not null, version integer not null, primary key (id)) ENGINE=InnoDB;
create table ships_modules (id integer not null auto_increment, adocks integer not null, ablativeArmor integer not null, bounty decimal(19,2) not null, cargo bigint not null, cost integer not null, crew integer not null, deutfactor integer not null, eps integer not null, flags longtext not null, heat integer not null, hull integer not null, hydro integer not null, jdocks integer not null, lostInEmpChance double precision not null, maxheat longtext not null, maxunitsize integer not null, minCrew integer not null, modules longtext not null, nahrungcargo bigint not null, nickname varchar(255) not null, panzerung integer not null, pickingCost integer not null, picture varchar(255) not null, ra integer not null, rd integer not null, recost integer not null, rm integer not null, ru integer not null, scanCost integer not null, sensorrange integer not null, shields integer not null, size integer not null, srs boolean not null, torpedodef integer not null, unitspace integer not null, version integer not null, versorger boolean not null, weapons longtext not null, werft integer not null, ow_werft integer, primary key (id)) ENGINE=InnoDB;
create table skn (post integer not null auto_increment, allypic integer not null, head varchar(255) not null, name varchar(255) not null, pic integer not null, text longtext not null, tick integer not null, time bigint not null, version integer not null, channel integer not null, userid integer not null, primary key (post)) ENGINE=InnoDB;
create table skn_channels (id integer not null auto_increment, allyowner integer not null, name varchar(255) not null, readall boolean not null, readally integer not null, readnpc boolean not null, readplayer longtext not null, version integer not null, writeall boolean not null, writeally integer not null, writenpc boolean not null, writeplayer longtext not null, primary key (id)) ENGINE=InnoDB;
create table skn_visits (id integer not null auto_increment, time bigint not null, version integer not null, channel integer not null, user integer not null, primary key (id)) ENGINE=InnoDB;
create table smilies (id integer not null auto_increment, image varchar(255) not null, tag varchar(255) not null, version integer not null, primary key (id)) ENGINE=InnoDB;
create table stat_aktive_spieler (tick integer not null, aktiv integer not null, gesamtanzahl integer not null, inaktiv integer not null, maxUserId integer not null, registrierungen integer not null, sehrAktiv integer not null, teilweiseAktiv integer not null, vacation integer not null, version integer not null, wenigAktiv integer not null, primary key (tick)) ENGINE=InnoDB;
create table stats_cargo (tick integer not null, cargo longtext not null, version integer not null, primary key (tick)) ENGINE=InnoDB;
create table stats_gtu (id integer not null auto_increment, gtugew double precision not null, mtype integer not null, owner integer not null, ownername varchar(255) not null, preis bigint not null, type longtext not null, userid integer not null, username varchar(255) not null, version integer not null, primary key (id)) ENGINE=InnoDB;
create table stats_module_locations (id integer not null auto_increment, item_id integer not null, locations varchar(255) not null, version integer not null, user_id integer not null, primary key (id)) ENGINE=InnoDB;
create table stats_ships (tick integer not null, crewcount bigint not null, shipcount bigint not null, version integer not null, primary key (tick)) ENGINE=InnoDB;
create table stats_user_cargo (id bigint not null auto_increment, cargo longtext not null, version integer not null, user_id integer not null, primary key (id), unique (user_id)) ENGINE=InnoDB;
create table stats_verkaeufe (id integer not null auto_increment, place varchar(255) not null, stats longtext not null, system integer not null, tick integer not null, version integer not null, primary key (id)) ENGINE=InnoDB;
create table systems (id integer not null auto_increment, military boolean not null, descrip longtext, gtuDropZone varchar(255), height integer not null, starmap boolean not null, mapX integer not null, mapY integer not null, maxColonies integer not null, Name varchar(255) not null, orderloc longtext, spawnableress longtext, access integer not null, width integer not null, primary key (id)) ENGINE=InnoDB;
create table tasks (taskid varchar(255) not null, data1 varchar(255), data2 varchar(255), data3 varchar(255), time bigint not null, timeout integer not null, type integer not null, version integer not null, primary key (taskid)) ENGINE=InnoDB;
create table tradepost_buy_limit (id bigint not null auto_increment, maximum bigint not null, min_rank integer not null, resourceid integer not null, version integer not null, shipid integer not null, primary key (id), unique (shipid, resourceid)) ENGINE=InnoDB;
create table tradepost_sell (id bigint not null auto_increment, minimum bigint not null, min_rank integer not null, price bigint not null, resourceid integer not null, version integer not null, shipid integer not null, primary key (id), unique (shipid, resourceid)) ENGINE=InnoDB;
create table transmissionen (id integer not null auto_increment, flags integer not null, gelesen integer not null, inhalt longtext not null, kommentar longtext not null, ordner integer not null, time bigint not null, title varchar(255) not null, version integer not null, empfaenger integer not null, sender integer not null, primary key (id)) ENGINE=InnoDB;
create table unit_types (id integer not null auto_increment, buildcosts varchar(255) not null, dauer integer not null, description longtext, hidden boolean not null, kapervalue integer not null, nahrungcost double precision not null, name varchar(255) not null, picture varchar(255) not null, recost double precision not null, size integer not null, res_id integer not null, primary key (id)) ENGINE=InnoDB;
create table upgrade_info (id integer not null auto_increment, cargo boolean not null, miningexplosive integer not null, modWert integer not null, ore integer not null, price integer not null, type_id integer not null, primary key (id)) ENGINE=InnoDB;
create table upgrade_job (id integer not null auto_increment, bar boolean not null, end integer not null, payed boolean not null, baseid integer not null, cargo integer not null, colonizerid integer, tiles integer not null, userid integer not null, primary key (id)) ENGINE=InnoDB;
create table upgrade_maxvalues (id integer not null auto_increment, maxcargo integer not null, maxtiles integer not null, type integer not null, primary key (id), unique (type)) ENGINE=InnoDB;
create table user_moneytransfer (id integer not null auto_increment, count decimal(19,2) not null, fake integer not null, text longtext not null, time bigint not null, type integer not null, version integer not null, from_id integer not null, to_id integer not null, primary key (id)) ENGINE=InnoDB;
create table user_rank (rank integer not null, version integer not null, rank_giver integer not null, owner integer not null, primary key (owner, rank_giver)) ENGINE=InnoDB;
create table user_relations (id integer not null auto_increment, status integer not null, version integer not null, target_id integer not null, user_id integer not null, primary key (id)) ENGINE=InnoDB;
create table user_values (id integer not null auto_increment, name varchar(255) not null, value longtext not null, version integer not null, user_id integer not null, primary key (id)) ENGINE=InnoDB;
create table users (id integer not null, accesslevel integer not null, disabled tinyint not null, email varchar(255) not null, inakt integer not null, log_fail integer not null, name varchar(255) not null, nickname varchar(255) not null, passwort varchar(255) not null, plainname varchar(255) not null, signup integer not null, un varchar(255) not null, version integer not null, bounty decimal(19,2) not null, destroyedShips integer, flags longtext, gtudropzone integer, history longtext, knownItems longtext, konto decimal(19,2), lostBattles smallint, lostShips integer, medals varchar(255), npcorderloc varchar(255), npcpunkte integer, personenNamenGenerator varchar(255), race integer, rang integer, schiffsKlassenNamenGenerator varchar(255), schiffsNamenGenerator varchar(255), specializationPoints integer, vaccount integer, vacpoints integer, wait4vac integer, wonBattles smallint, ally integer, allyposten integer unique, primary key (id)) ENGINE=InnoDB;
create table users_forschungen (users_id integer not null, forschungen_id integer not null, primary key (users_id, forschungen_id)) ENGINE=InnoDB;
create table versteigerungen (mtype integer not null, id integer not null auto_increment, preis bigint not null, tick integer not null, version integer not null, type varchar(255), bieter integer not null, owner integer not null, primary key (id)) ENGINE=InnoDB;
create table weapon (implementierung varchar(31) not null, id varchar(255) not null, apCost integer not null, areaDamage integer not null, baseDamage integer not null, defSmallTrefferWS integer not null, defSubWS integer not null, defTorpTrefferWS double precision not null, defTrefferWS integer not null, destroyable boolean not null, eCost integer not null, name varchar(255), shieldDamage integer not null, singleshots integer not null, subDamage integer not null, primary key (id)) ENGINE=InnoDB;
create table weapon_flags (Weapon_id varchar(255) not null, flags integer) ENGINE=InnoDB;
create table weapon_munition (Weapon_id varchar(255) not null, munition varchar(255)) ENGINE=InnoDB;
create table werft_queues (id integer not null auto_increment, flagschiff boolean not null, item integer not null, costsPerTick longtext not null, energyPerTick integer not null, position integer not null, remaining integer not null, scheduled boolean not null, slots integer not null, building integer not null, werft integer not null, primary key (id)) ENGINE=InnoDB;
create table werften (werfttype char(1) not null, id integer not null auto_increment, flagschiff boolean not null, type integer not null, version integer not null, komplex boolean, linkedWerft integer, linked integer, shipid integer, primary key (id)) ENGINE=InnoDB;
alter table academy_queue_entry add index academy_queues_fk_academy (academy_id), add constraint academy_queues_fk_academy foreign key (academy_id) references academy (id);
alter table ally add index ally_fk_users (president), add constraint ally_fk_users foreign key (president) references users (id);
alter table ally_posten add index ally_posten_fk_ally (ally), add constraint ally_posten_fk_ally foreign key (ally) references ally (id);
alter table ally_rangdescriptors add index ally_rangdescriptors_fk_ally (ally_id), add constraint ally_rangdescriptors_fk_ally foreign key (ally_id) references ally (id);
create index idx_feeding on bases (isfeeding);
create index owner on bases (owner, id);
create index coords on bases (x, y, system);
alter table bases add index bases_fk_academy (academy_id), add constraint bases_fk_academy foreign key (academy_id) references academy (id);
alter table bases add index bases_fk_core (core_id), add constraint bases_fk_core foreign key (core_id) references cores (id);
alter table bases add index bases_fk_fz (forschungszentrum_id), add constraint bases_fk_fz foreign key (forschungszentrum_id) references fz (id);
alter table bases add index bases_fk_basetypes (klasse), add constraint bases_fk_basetypes foreign key (klasse) references base_types (id);
alter table bases add index bases_fk_users (owner), add constraint bases_fk_users foreign key (owner) references users (id);
alter table bases add index bases_fk_werften (werft_id), add constraint bases_fk_werften foreign key (werft_id) references werften (id);
create index coords on battles (x, y, system);
alter table battles add index battles_fk_users1 (commander1), add constraint battles_fk_users1 foreign key (commander1) references users (id);
alter table battles add index battles_fk_users2 (commander2), add constraint battles_fk_users2 foreign key (commander2) references users (id);
alter table battles_ships add index battles_ships_fk_battles (battleid), add constraint battles_ships_fk_battles foreign key (battleid) references battles (id);
alter table battles_ships add index FK56245F3364F29ED2 (shipid), add constraint FK56245F3364F29ED2 foreign key (shipid) references ships (id);
alter table building_alternativebilder add index building_alternativebilder_fk_building (Building_id), add constraint building_alternativebilder_fk_building foreign key (Building_id) references buildings (id);
create index category on buildings (category);
alter table buildings add index building_fk_forschung (techReq_id), add constraint building_fk_forschung foreign key (techReq_id) references forschungen (id);
alter table cargo_entries_units add index cargo_entries_units_fk_unittype (unittype), add constraint cargo_entries_units_fk_unittype foreign key (unittype) references unit_types (id);
alter table cargo_entries_units add index cargo_entries_units_fk_basis (basis_id), add constraint cargo_entries_units_fk_basis foreign key (basis_id) references bases (id);
alter table cargo_entries_units add index cargo_entries_units_fk_schiff (schiff_id), add constraint cargo_entries_units_fk_schiff foreign key (schiff_id) references ships (id);
alter table config_felsbrocken add index fk_config_felsbrocken_shiptype (shiptype), add constraint fk_config_felsbrocken_shiptype foreign key (shiptype) references ship_types (id);
alter table config_felsbrocken add index fk_config_felsbrocken_system (system_id), add constraint fk_config_felsbrocken_system foreign key (system_id) references config_felsbrocken_systems (id);
alter table config_felsbrocken_systems add index config_felsbrocken_systems_fk_system (system_id), add constraint config_felsbrocken_systems_fk_system foreign key (system_id) references systems (id);
alter table cores add index core_fk_basetype (astitype), add constraint core_fk_basetype foreign key (astitype) references base_types (id);
alter table cores add index core_fk_forschung (techReq_id), add constraint core_fk_forschung foreign key (techReq_id) references forschungen (id);
alter table dynamic_content add index dynamic_content_fk_users (hochgeladenDurch_id), add constraint dynamic_content_fk_users foreign key (hochgeladenDurch_id) references users (id);
alter table factions_angebote add index factions_angebote_fk_user (faction), add constraint factions_angebote_fk_user foreign key (faction) references users (id);
alter table factions_shop_entries add index factions_shop_entries_fk_users (faction_id), add constraint factions_shop_entries_fk_users foreign key (faction_id) references users (id);
alter table factions_shop_orders add index factions_shop_orders_fk_factions_shop_entries (shopentry_id), add constraint factions_shop_orders_fk_factions_shop_entries foreign key (shopentry_id) references factions_shop_entries (id);
alter table factions_shop_orders add index factions_shop_orders_fk_users (user_id), add constraint factions_shop_orders_fk_users foreign key (user_id) references users (id);
alter table factory add index factory_fk_bases (col), add constraint factory_fk_bases foreign key (col) references bases (id);
alter table forschungen add index forschung_fk_forschung1 (req1_id), add constraint forschung_fk_forschung1 foreign key (req1_id) references forschungen (id);
alter table forschungen add index forschung_fk_forschung2 (req2_id), add constraint forschung_fk_forschung2 foreign key (req2_id) references forschungen (id);
alter table forschungen add index forschung_fk_forschung3 (req3_id), add constraint forschung_fk_forschung3 foreign key (req3_id) references forschungen (id);
alter table fraktion_aktions_meldung add index fraktion_aktions_meldung_fk_users2 (fraktion_id), add constraint fraktion_aktions_meldung_fk_users2 foreign key (fraktion_id) references users (id);
alter table fraktion_aktions_meldung add index fraktion_aktions_meldung_fk_users (gemeldetVon_id), add constraint fraktion_aktions_meldung_fk_users foreign key (gemeldetVon_id) references users (id);
alter table fraktions_gui_eintrag add index fraktionsguieintrag_fk_user (user_id), add constraint fraktionsguieintrag_fk_user foreign key (user_id) references users (id);
alter table fraktions_gui_eintrag_seiten add index fraktionsguieintrag_fk_fraktionsguieintrag_seiten (FraktionsGuiEintrag_id), add constraint fraktionsguieintrag_fk_fraktionsguieintrag_seiten foreign key (FraktionsGuiEintrag_id) references fraktions_gui_eintrag (id);
alter table fz add index fz_fk_forschungen (forschung), add constraint fz_fk_forschungen foreign key (forschung) references forschungen (id);
create index posten on gtu_zwischenlager (posten, user1, user2);
alter table gtu_zwischenlager add index gtu_zwischenlager_fk_ships (posten), add constraint gtu_zwischenlager_fk_ships foreign key (posten) references ships (id);
alter table gtu_zwischenlager add index gtu_zwischenlager_fk_users1 (user1), add constraint gtu_zwischenlager_fk_users1 foreign key (user1) references users (id);
alter table gtu_zwischenlager add index gtu_zwischenlager_fk_users2 (user2), add constraint gtu_zwischenlager_fk_users2 foreign key (user2) references users (id);
alter table handel add index handel_fk_users (who), add constraint handel_fk_users foreign key (who) references users (id);
alter table inttutorial add index inttutorial_fk_inttutorial (benoetigteSeite_id), add constraint inttutorial_fk_inttutorial foreign key (benoetigteSeite_id) references inttutorial (id);
alter table items_build add index factoryentry_fk_forschung1 (res1_id), add constraint factoryentry_fk_forschung1 foreign key (res1_id) references forschungen (id);
alter table items_build add index factoryentry_fk_forschung2 (res2_id), add constraint factoryentry_fk_forschung2 foreign key (res2_id) references forschungen (id);
alter table items_build add index factoryentry_fk_forschung3 (res3_id), add constraint factoryentry_fk_forschung3 foreign key (res3_id) references forschungen (id);
create index coords on jumpnodes (x, y, system);
alter table jumps add index jumps_fk_ships (shipid), add constraint jumps_fk_ships foreign key (shipid) references ships (id);
alter table kaserne add index kaserne_fk_bases (col), add constraint kaserne_fk_bases foreign key (col) references bases (id);
alter table kaserne_queues add index kaserne_queues_fk_kaserne (kaserne), add constraint kaserne_queues_fk_kaserne foreign key (kaserne) references kaserne (id);
alter table kaserne_queues add index kaserne_queues_fk_unittype (unitid), add constraint kaserne_queues_fk_unittype foreign key (unitid) references unit_types (id);
alter table loyalitaetspunkte add index loyalitaetspunkte_fk_users_1 (user_id), add constraint loyalitaetspunkte_fk_users_1 foreign key (user_id) references users (id);
alter table loyalitaetspunkte add index loyalitaetspunkte_fk_users_2 (verliehenDurch_id), add constraint loyalitaetspunkte_fk_users_2 foreign key (verliehenDurch_id) references users (id);
create index idx_nebulatype on nebel (type);
alter table offiziere add index offiziere_fk_users (userid), add constraint offiziere_fk_users foreign key (userid) references users (id);
alter table offiziere add index offiziere_fk_bases (stationiertAufBasis_id), add constraint offiziere_fk_bases foreign key (stationiertAufBasis_id) references bases (id);
alter table offiziere add index offiziere_fk_ships (stationiertAufSchiff_id), add constraint offiziere_fk_ships foreign key (stationiertAufSchiff_id) references ships (id);
alter table orders_ships add index orders_ships_fk_shiptypes (type), add constraint orders_ships_fk_shiptypes foreign key (type) references ship_types (id);
alter table ordner add index ordner_fk_users (playerid), add constraint ordner_fk_users foreign key (playerid) references users (id);
alter table permission add index permission_fk_users (user_id), add constraint permission_fk_users foreign key (user_id) references users (id);
create index questid on quests_completed (questid, userid);
alter table quests_completed add index quests_completed_fk_quests (questid), add constraint quests_completed_fk_quests foreign key (questid) references quests (id);
alter table quests_completed add index quests_completed_fk_users (userid), add constraint quests_completed_fk_users foreign key (userid) references users (id);
create index questid on quests_running (questid, userid);
alter table quests_running add index quests_running_fk_quests (questid), add constraint quests_running_fk_quests foreign key (questid) references quests (id);
alter table quests_running add index quests_running_fk_users (userid), add constraint quests_running_fk_users foreign key (userid) references users (id);
alter table rasse add index rasse_fk_user (head_id), add constraint rasse_fk_user foreign key (head_id) references users (id);
alter table rasse add index rasse_fk_rasse (memberIn_id), add constraint rasse_fk_rasse foreign key (memberIn_id) references rasse (id);
create index bookmark on schiff_einstellungen (bookmark);
create index idx_allyfeeding on schiff_einstellungen (isallyfeeding);
create index idx_feeding on schiff_einstellungen (isfeeding);
create index name on scripts (name);
alter table sessions add index sessions_fk_users (userId), add constraint sessions_fk_users foreign key (userId) references users (id);
alter table ship_flags add index ship_flags_fk_ships (ship), add constraint ship_flags_fk_ships foreign key (ship) references ships (id);
create index shiptype on ship_loot (shiptype);
alter table ship_loot add index ship_loot_fk_users1 (owner), add constraint ship_loot_fk_users1 foreign key (owner) references users (id);
alter table ship_loot add index ship_loot_fk_users2 (targetuser), add constraint ship_loot_fk_users2 foreign key (targetuser) references users (id);
create index versorger on ship_types (versorger);
alter table ship_types add index ship_types_fk_ship_types (ow_werft), add constraint ship_types_fk_ship_types foreign key (ow_werft) references ship_types (id);
create index docked on ships (docked);
create index status on ships (status);
create index coords on ships (system, x, y);
create index owner on ships (owner, id);
alter table ships add index ships_fk_battles (battle), add constraint ships_fk_battles foreign key (battle) references battles (id);
alter table ships add index ships_fk_schiff_einstellungen (einstellungen_id), add constraint ships_fk_schiff_einstellungen foreign key (einstellungen_id) references schiff_einstellungen (id);
alter table ships add index ships_fk_ship_fleets (fleet), add constraint ships_fk_ship_fleets foreign key (fleet) references ship_fleets (id);
alter table ships add index ships_fk_ships_modules (modules), add constraint ships_fk_ships_modules foreign key (modules) references ships_modules (id);
alter table ships add index ships_fk_users (owner), add constraint ships_fk_users foreign key (owner) references users (id);
alter table ships add index ships_fk_ship_script_data (scriptData_id), add constraint ships_fk_ship_script_data foreign key (scriptData_id) references ship_script_data (shipid);
alter table ships add index ships_type_fk (type), add constraint ships_type_fk foreign key (type) references ship_types (id);
alter table ships add index FK6856DB7B6B202B4 (id), add constraint FK6856DB7B6B202B4 foreign key (id) references ship_history (id);
alter table ships_baubar add index ships_baubar_fk_forschung1 (res1_id), add constraint ships_baubar_fk_forschung1 foreign key (res1_id) references forschungen (id);
alter table ships_baubar add index ships_baubar_fk_forschung2 (res2_id), add constraint ships_baubar_fk_forschung2 foreign key (res2_id) references forschungen (id);
alter table ships_baubar add index ships_baubar_fk_forschung3 (res3_id), add constraint ships_baubar_fk_forschung3 foreign key (res3_id) references forschungen (id);
alter table ships_baubar add index ships_baubar_type_fk (type), add constraint ships_baubar_type_fk foreign key (type) references ship_types (id);
create index ally on ships_lost (ally);
create index battle on ships_lost (battle);
create index battlelog on ships_lost (battlelog);
create index destally on ships_lost (destally);
create index destowner on ships_lost (destowner);
create index owner on ships_lost (owner);
create index versorger on ships_modules (versorger);
alter table ships_modules add index ship_modules_fk_ships_types (ow_werft), add constraint ship_modules_fk_ships_types foreign key (ow_werft) references ship_types (id);
alter table skn add index skn_fk_skn_channels (channel), add constraint skn_fk_skn_channels foreign key (channel) references skn_channels (id);
alter table skn add index skn_fk_users (userid), add constraint skn_fk_users foreign key (userid) references users (id);
create index allyowner on skn_channels (allyowner);
create index user on skn_visits (user, channel);
alter table skn_visits add index skn_visits_fk_skn_channels (channel), add constraint skn_visits_fk_skn_channels foreign key (channel) references skn_channels (id);
alter table skn_visits add index skn_visits_fk_users (user), add constraint skn_visits_fk_users foreign key (user) references users (id);
create index preis on stats_gtu (preis);
alter table stats_module_locations add index stats_module_locations_fk_user_id (user_id), add constraint stats_module_locations_fk_user_id foreign key (user_id) references users (id);
alter table stats_user_cargo add index stats_user_cargo_fk_user_id (user_id), add constraint stats_user_cargo_fk_user_id foreign key (user_id) references users (id);
create index system on stats_verkaeufe (system);
create index tick on stats_verkaeufe (tick);
create index place on stats_verkaeufe (place, system);
create index taskkey_idx on tasks (type, time, data1, data2, data3);
alter table tradepost_buy_limit add index tradepost_buy_limit_fk_ships (shipid), add constraint tradepost_buy_limit_fk_ships foreign key (shipid) references ships (id);
alter table tradepost_sell add index tradepost_sell_fk_ships (shipid), add constraint tradepost_sell_fk_ships foreign key (shipid) references ships (id);
create index empfaenger on transmissionen (empfaenger, gelesen);
alter table transmissionen add index transmissionen_fk_users2 (empfaenger), add constraint transmissionen_fk_users2 foreign key (empfaenger) references users (id);
alter table transmissionen add index transmissionen_fk_users1 (sender), add constraint transmissionen_fk_users1 foreign key (sender) references users (id);
alter table unit_types add index unitttype_fk_forschung (res_id), add constraint unitttype_fk_forschung foreign key (res_id) references forschungen (id);
alter table upgrade_info add index upgrade_info_fk_basetype (type_id), add constraint upgrade_info_fk_basetype foreign key (type_id) references base_types (id);
alter table upgrade_job add index upgrade_job_fk_base (baseid), add constraint upgrade_job_fk_base foreign key (baseid) references bases (id);
alter table upgrade_job add index upgrade_job_fk_mod_cargo (cargo), add constraint upgrade_job_fk_mod_cargo foreign key (cargo) references upgrade_info (id);
alter table upgrade_job add index upgrade_job_fk_ships (colonizerid), add constraint upgrade_job_fk_ships foreign key (colonizerid) references ships (id);
alter table upgrade_job add index upgrade_job_fk_mod_tiles (tiles), add constraint upgrade_job_fk_mod_tiles foreign key (tiles) references upgrade_info (id);
alter table upgrade_job add index upgrade_job_fk_user (userid), add constraint upgrade_job_fk_user foreign key (userid) references users (id);
alter table upgrade_maxvalues add index upgrade_max_values_fk_basetype (type), add constraint upgrade_max_values_fk_basetype foreign key (type) references base_types (id);
create index time on user_moneytransfer (time);
create index from_idx on user_moneytransfer (from_id, to_id);
alter table user_moneytransfer add index user_moneytransfer_fk_users1 (from_id), add constraint user_moneytransfer_fk_users1 foreign key (from_id) references users (id);
alter table user_moneytransfer add index user_moneytransfer_fk_users2 (to_id), add constraint user_moneytransfer_fk_users2 foreign key (to_id) references users (id);
alter table user_rank add index user_rank_fk_users2 (rank_giver), add constraint user_rank_fk_users2 foreign key (rank_giver) references users (id);
alter table user_rank add index user_rank_fk_users1 (owner), add constraint user_rank_fk_users1 foreign key (owner) references users (id);
create index user_id on user_relations (user_id, target_id);
alter table user_relations add index user_relations_fk_users2 (target_id), add constraint user_relations_fk_users2 foreign key (target_id) references users (id);
alter table user_relations add index user_relations_fk_users1 (user_id), add constraint user_relations_fk_users1 foreign key (user_id) references users (id);
create index id on user_values (user_id, name);
alter table user_values add index user_values_fk_users (user_id), add constraint user_values_fk_users foreign key (user_id) references users (id);
create index un on users (un);
create index vaccount on users (vaccount, wait4vac);
alter table users add index users_fk_ally (ally), add constraint users_fk_ally foreign key (ally) references ally (id);
alter table users add index users_fk_ally_posten (allyposten), add constraint users_fk_ally_posten foreign key (allyposten) references ally_posten (id);
alter table users_forschungen add index users_forschungen_fk_users (forschungen_id), add constraint users_forschungen_fk_users foreign key (forschungen_id) references forschungen (id);
alter table users_forschungen add index users_fk_forschungen (users_id), add constraint users_fk_forschungen foreign key (users_id) references users (id);
alter table versteigerungen add index versteigerungen_fk_users (bieter), add constraint versteigerungen_fk_users foreign key (bieter) references users (id);
alter table versteigerungen add index versteigerungen_fk_users2 (owner), add constraint versteigerungen_fk_users2 foreign key (owner) references users (id);
alter table weapon_flags add index weapon_flags_fk_weapon (Weapon_id), add constraint weapon_flags_fk_weapon foreign key (Weapon_id) references weapon (id);
alter table weapon_munition add index weapon_munition_fk_weapon (Weapon_id), add constraint weapon_munition_fk_weapon foreign key (Weapon_id) references weapon (id);
alter table werft_queues add index werft_queues_fk_ship_types (building), add constraint werft_queues_fk_ship_types foreign key (building) references ship_types (id);
alter table werft_queues add index werft_queues_fk_werften (werft), add constraint werft_queues_fk_werften foreign key (werft) references werften (id);
alter table werften add index werften_fk_werften (linkedWerft), add constraint werften_fk_werften foreign key (linkedWerft) references werften (id);
alter table werften add index werften_fk_bases (linked), add constraint werften_fk_bases foreign key (linked) references bases (id);
alter table werften add index werften_fk_ships (shipid), add constraint werften_fk_ships foreign key (shipid) references ships (id)
